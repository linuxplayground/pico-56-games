ca65 V2.19 - Git 75461e131
Main file   : ../lib/ay-3-8910.s
Current file: ../lib/ay-3-8910.s

000000r 1               ; vim: set ft=asm_ca65 ts=4 sw=4 et:
000000r 1               ; 6502 - AY-3-819x PSG
000000r 1               ;
000000r 1               ; Copyright (c) 2021 Troy Schrapel
000000r 1               ;
000000r 1               ; This code is licensed under the MIT license
000000r 1               ;
000000r 1               ; https://github.com/visrealm/hbc-56
000000r 1               
000000r 1               .include "ay-3-8910.inc"
000000r 2               ; vim: set ft=asm_ca65 ts=4 sw=4 et:
000000r 2               
000000r 2               ; 6502 - AY-3-819x PSG
000000r 2               ;
000000r 2               ; Copyright (c) 2021 Troy Schrapel
000000r 2               ;
000000r 2               ; This code is licensed under the MIT license
000000r 2               ;
000000r 2               ; https://github.com/visrealm/hbc-56
000000r 2               
000000r 2               IO_PORT_BASE_ADDRESS = $7F00
000000r 2               AY_IO_PORT = $40
000000r 2               AY_PSG0 = $00
000000r 2               AY_PSG1 = $04
000000r 2               
000000r 2               ; IO Ports
000000r 2               AY_S0 = IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_PSG0
000000r 2               AY_S1 = IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_PSG1
000000r 2               AY_INACTIVE = $03
000000r 2               AY_READ     = $02
000000r 2               AY_WRITE    = $01
000000r 2               AY_ADDR     = $00
000000r 2               
000000r 2               AY_S0_READ  = AY_S0 | AY_READ
000000r 2               AY_S0_WRITE = AY_S0 | AY_WRITE
000000r 2               AY_S0_ADDR  = AY_S0 | AY_ADDR
000000r 2               
000000r 2               AY_S1_READ  = AY_S1 | AY_READ
000000r 2               AY_S1_WRITE = AY_S1 | AY_WRITE
000000r 2               AY_S1_ADDR  = AY_S1 | AY_ADDR
000000r 2               
000000r 2               ; Registers (they're named using Octal values)
000000r 2               AY_R0 = 0
000000r 2               AY_R1 = 1
000000r 2               AY_R2 = 2
000000r 2               AY_R3 = 3
000000r 2               AY_R4 = 4
000000r 2               AY_R5 = 5
000000r 2               AY_R6 = 6
000000r 2               AY_R7 = 7
000000r 2               AY_R10 = 8
000000r 2               AY_R11 = 9
000000r 2               AY_R12 = 10
000000r 2               AY_R13 = 11
000000r 2               AY_R14 = 12
000000r 2               AY_R15 = 13
000000r 2               AY_R16 = 14
000000r 2               AY_R17 = 15
000000r 2               
000000r 2               AY_CHA = 0
000000r 2               AY_CHB = 1
000000r 2               AY_CHC = 2
000000r 2               AY_CHN = 3
000000r 2               
000000r 2               AY_CHA_TONE_L   = AY_R0
000000r 2               AY_CHA_TONE_H   = AY_R1
000000r 2               AY_CHB_TONE_L   = AY_R2
000000r 2               AY_CHB_TONE_H   = AY_R3
000000r 2               AY_CHC_TONE_L   = AY_R4
000000r 2               AY_CHC_TONE_H   = AY_R5
000000r 2               AY_NOISE_GEN    = AY_R6
000000r 2               AY_ENABLES      = AY_R7
000000r 2               AY_CHA_AMPL     = AY_R10
000000r 2               AY_CHB_AMPL     = AY_R11
000000r 2               AY_CHC_AMPL     = AY_R12
000000r 2               AY_ENV_PERIOD_L = AY_R13
000000r 2               AY_ENV_PERIOD_H = AY_R14
000000r 2               AY_ENV_SHAPE    = AY_R15
000000r 2               AY_PORTA        = AY_R16
000000r 2               AY_PORTB        = AY_R17
000000r 2               
000000r 2               AY_ENV_SHAPE_CONTINUE  = $08
000000r 2               AY_ENV_SHAPE_ATTACK    = $04
000000r 2               AY_ENV_SHAPE_ALTERNATE = $02
000000r 2               AY_ENV_SHAPE_HOLD      = $01
000000r 2               
000000r 2               ;  /\  /\  /\  /\  /\
000000r 2               ; /  \/  \/  \/  \/  \
000000r 2               AY_ENV_SHAPE_TRIANGLE     = (AY_ENV_SHAPE_CONTINUE | AY_ENV_SHAPE_ATTACK | AY_ENV_SHAPE_ALTERNATE)
000000r 2               
000000r 2               ; \  /\  /\  /\  /\  /
000000r 2               ;  \/  \/  \/  \/  \/
000000r 2               AY_ENV_SHAPE_TRIANGLE2    = (AY_ENV_SHAPE_CONTINUE | AY_ENV_SHAPE_ALTERNATE)
000000r 2               
000000r 2               ;  /------------------
000000r 2               ; /
000000r 2               AY_ENV_SHAPE_FADE_IN      = (AY_ENV_SHAPE_CONTINUE | AY_ENV_SHAPE_ATTACK | AY_ENV_SHAPE_HOLD)
000000r 2               
000000r 2               ; \
000000r 2               ;  \__________________
000000r 2               AY_ENV_SHAPE_FADE_OUT     = (AY_ENV_SHAPE_CONTINUE | AY_ENV_SHAPE_HOLD)
000000r 2               
000000r 2               ; \ |\ |\ |\ |\ |\ |\ |
000000r 2               ;  \| \| \| \| \| \| \|
000000r 2               AY_ENV_SHAPE_SAW1         = (AY_ENV_SHAPE_CONTINUE)
000000r 2               
000000r 2               ;  /| /| /| /| /| /| /|
000000r 2               ; / |/ |/ |/ |/ |/ |/ |
000000r 2               AY_ENV_SHAPE_SAW2         = (AY_ENV_SHAPE_CONTINUE | AY_ENV_SHAPE_ATTACK)
000000r 2               
000000r 2               ;  /|
000000r 2               ; / |__________________
000000r 2               AY_ENV_SHAPE_FADE_IN_STOP = (AY_ENV_SHAPE_ATTACK)
000000r 2               
000000r 2               
000000r 2               AY_CLOCK_FREQ   = 2000000
000000r 2               
000000r 2               .macro ayWrite dev, reg, val
000000r 2                       lda #reg
000000r 2                       sta IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_ADDR | dev
000000r 2                       lda #val
000000r 2                       sta IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_WRITE | dev
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayRead dev, reg
000000r 2                       lda #reg
000000r 2                       sta IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_ADDR | dev
000000r 2                       lda IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_READ | dev
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayWriteX dev, reg
000000r 2                       lda #reg
000000r 2                       sta IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_ADDR | dev
000000r 2                       stx IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_WRITE | dev
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayWriteA dev, reg
000000r 2                       ldx #reg
000000r 2                       stx IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_ADDR | dev
000000r 2                       sta IO_PORT_BASE_ADDRESS | AY_IO_PORT | AY_WRITE | dev
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayPlayNote dev, chan, freq
000000r 2                       .local val
000000r 2                       .if freq <= 0
000000r 2                               val = 0
000000r 2                       .else
000000r 2                               val = AY_CLOCK_FREQ / (16 * freq)
000000r 2                       .endif
000000r 2                       ayWrite dev, AY_CHA_TONE_L | (chan * 2), <val
000000r 2                       ayWrite dev, AY_CHA_TONE_H | (chan * 2), >val
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayToneWordPeriod periodHz
000000r 2                       .word ((AY_CLOCK_FREQ * periodHz) / 16)
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayToneWord freq
000000r 2                       .word (AY_CLOCK_FREQ / (16 * freq))
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayToneByteL freq
000000r 2                       .byte <(AY_CLOCK_FREQ / (16 * freq))
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayToneByteH freq
000000r 2                       .byte >(AY_CLOCK_FREQ / (16 * freq))
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayToneEnable dev, chan
000000r 2                       ayRead dev, AY_ENABLES
000000r 2                       and #($01 << chan)
000000r 2                       ayWriteA dev, AY_ENABLES
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayToneDisable dev, chan
000000r 2                       ayRead dev, AY_ENABLES
000000r 2                       ora #($01 << chan)
000000r 2                       ayWriteA dev, AY_ENABLES
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayNoiseEnable dev, chan
000000r 2                       ayRead dev, AY_ENABLES
000000r 2                       eor #($08 << chan)
000000r 2                       ayWriteA dev, AY_ENABLES
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayNoiseDisable dev, chan
000000r 2                       ayRead dev, AY_ENABLES
000000r 2                       ora #($08 << chan)
000000r 2                       ayWriteA dev, AY_ENABLES
000000r 2               .endmacro
000000r 2               
000000r 2               .macro aySetVolume dev, chan, vol
000000r 2                       ayWrite dev, (AY_CHA_AMPL | chan), (vol >> 4)
000000r 2               .endmacro
000000r 2               
000000r 2               .macro aySetVolumeAcc dev, chan
000000r 2                       ayWriteA dev, (AY_CHA_AMPL | chan)
000000r 2               .endmacro
000000r 2               
000000r 2               .macro aySetVolumeEnvelope dev, chan
000000r 2                       ayWrite dev, (AY_CHA_AMPL | chan), $10
000000r 2               .endmacro
000000r 2               
000000r 2               .macro aySetEnvelopePeriod dev, period
000000r 2                       ayWrite dev, AY_ENV_PERIOD_L, <period
000000r 2                       ayWrite dev, AY_ENV_PERIOD_H, >period
000000r 2               .endmacro
000000r 2               
000000r 2               .macro aySetEnvShape dev, shape
000000r 2                       ayWrite dev, AY_ENV_SHAPE, shape
000000r 2               .endmacro
000000r 2               
000000r 2               .macro aySetNoise dev, freq
000000r 2                       ayWrite dev, AY_ENV_SHAPE, freq >> 3
000000r 2               .endmacro
000000r 2               
000000r 2               .macro ayStop dev, chan
000000r 2                       ayPlayNote dev, chan, 0
000000r 2                       ayToneDisable dev, chan
000000r 2               .endmacro
000000r 2               
000000r 2               NOTE_FREQ_C0  = 16
000000r 2               NOTE_FREQ_CS0 = 17
000000r 2               NOTE_FREQ_D0  = 18
000000r 2               NOTE_FREQ_DS0 = 19
000000r 2               NOTE_FREQ_E0  = 20
000000r 2               NOTE_FREQ_F0  = 21
000000r 2               NOTE_FREQ_FS0 = 23
000000r 2               NOTE_FREQ_G0  = 24
000000r 2               NOTE_FREQ_GS0 = 25
000000r 2               NOTE_FREQ_A0  = 27
000000r 2               NOTE_FREQ_AS0 = 29
000000r 2               NOTE_FREQ_B0  = 30
000000r 2               NOTE_FREQ_C1  = 32
000000r 2               NOTE_FREQ_CS1 = 34
000000r 2               NOTE_FREQ_D1  = 36
000000r 2               NOTE_FREQ_DS1 = 38
000000r 2               NOTE_FREQ_E1  = 41
000000r 2               NOTE_FREQ_F1  = 43
000000r 2               NOTE_FREQ_FS1 = 46
000000r 2               NOTE_FREQ_G1  = 49
000000r 2               NOTE_FREQ_GS1 = 51
000000r 2               NOTE_FREQ_A1  = 55
000000r 2               NOTE_FREQ_AS1 = 58
000000r 2               NOTE_FREQ_B1  = 61
000000r 2               NOTE_FREQ_C2  = 65
000000r 2               NOTE_FREQ_CS2 = 69
000000r 2               NOTE_FREQ_D2  = 73
000000r 2               NOTE_FREQ_DS2 = 77
000000r 2               NOTE_FREQ_E2  = 82
000000r 2               NOTE_FREQ_F2  = 87
000000r 2               NOTE_FREQ_FS2 = 92
000000r 2               NOTE_FREQ_G2  = 98
000000r 2               NOTE_FREQ_GS2 = 103
000000r 2               NOTE_FREQ_A2  = 110
000000r 2               NOTE_FREQ_AS2 = 116
000000r 2               NOTE_FREQ_B2  = 123
000000r 2               NOTE_FREQ_C3  = 130
000000r 2               NOTE_FREQ_CS3 = 138
000000r 2               NOTE_FREQ_D3  = 146
000000r 2               NOTE_FREQ_DS3 = 155
000000r 2               NOTE_FREQ_E3  = 164
000000r 2               NOTE_FREQ_F3  = 174
000000r 2               NOTE_FREQ_FS3 = 185
000000r 2               NOTE_FREQ_G3  = 196
000000r 2               NOTE_FREQ_GS3 = 207
000000r 2               NOTE_FREQ_A3  = 220
000000r 2               NOTE_FREQ_AS3 = 233
000000r 2               NOTE_FREQ_B3  = 246
000000r 2               NOTE_FREQ_C4  = 261
000000r 2               NOTE_FREQ_CS4 = 277
000000r 2               NOTE_FREQ_D4  = 293
000000r 2               NOTE_FREQ_DS4 = 311
000000r 2               NOTE_FREQ_E4  = 329
000000r 2               NOTE_FREQ_F4  = 349
000000r 2               NOTE_FREQ_FS4 = 369
000000r 2               NOTE_FREQ_G4  = 392
000000r 2               NOTE_FREQ_GS4 = 415
000000r 2               NOTE_FREQ_A4  = 440
000000r 2               NOTE_FREQ_AS4 = 466
000000r 2               NOTE_FREQ_B4  = 493
000000r 2               NOTE_FREQ_C5  = 523
000000r 2               NOTE_FREQ_CS5 = 554
000000r 2               NOTE_FREQ_D5  = 587
000000r 2               NOTE_FREQ_DS5 = 622
000000r 2               NOTE_FREQ_E5  = 659
000000r 2               NOTE_FREQ_F5  = 698
000000r 2               NOTE_FREQ_FS5 = 739
000000r 2               NOTE_FREQ_G5  = 783
000000r 2               NOTE_FREQ_GS5 = 830
000000r 2               NOTE_FREQ_A5  = 880
000000r 2               NOTE_FREQ_AS5 = 932
000000r 2               NOTE_FREQ_B5  = 987
000000r 2               NOTE_FREQ_C6  = 104
000000r 2               NOTE_FREQ_CS6 = 110
000000r 2               NOTE_FREQ_D6  = 117
000000r 2               NOTE_FREQ_DS6 = 124
000000r 2               NOTE_FREQ_E6  = 131
000000r 2               NOTE_FREQ_F6  = 139
000000r 2               NOTE_FREQ_FS6 = 147
000000r 2               NOTE_FREQ_G6  = 156
000000r 2               NOTE_FREQ_GS6 = 166
000000r 2               NOTE_FREQ_A6  = 176
000000r 2               NOTE_FREQ_AS6 = 186
000000r 2               NOTE_FREQ_B6  = 197
000000r 2               NOTE_FREQ_C7  = 209
000000r 2               NOTE_FREQ_CS7 = 221
000000r 2               NOTE_FREQ_D7  = 234
000000r 2               NOTE_FREQ_DS7 = 248
000000r 2               NOTE_FREQ_E7  = 263
000000r 2               NOTE_FREQ_F7  = 279
000000r 2               NOTE_FREQ_FS7 = 295
000000r 2               NOTE_FREQ_G7  = 313
000000r 2               NOTE_FREQ_GS7 = 332
000000r 2               NOTE_FREQ_A7  = 352
000000r 2               NOTE_FREQ_AS7 = 372
000000r 2               NOTE_FREQ_B7  = 395
000000r 2               NOTE_FREQ_C8  = 418
000000r 2               NOTE_FREQ_CS8 = 443
000000r 2               NOTE_FREQ_D8  = 469
000000r 2               NOTE_FREQ_DS8 = 497
000000r 2               NOTE_FREQ_E8  = 527
000000r 2               NOTE_FREQ_F8  = 558
000000r 2               NOTE_FREQ_FS8 = 591
000000r 2               NOTE_FREQ_G8  = 627
000000r 2               NOTE_FREQ_GS8 = 664
000000r 2               NOTE_FREQ_A8  = 704
000000r 2               NOTE_FREQ_AS8 = 745
000000r 2               NOTE_FREQ_B8  = 790
000000r 2               
000000r 2               
000000r 1               .export ayInit
000000r 1               
000000r 1               .code
000000r 1               
000000r 1               ayInit: ; disable everything ayWrite AY_PSG0, AY_ENABLES, $ff
000000r 1  A9 07 8D 44          ayWrite AY_PSG1, AY_ENABLES, $ff
000004r 1  7F A9 FF 8D  
000008r 1  45 7F        
00000Ar 1               
00000Ar 1  A9 08 8D 40          aySetVolume AY_PSG0, AY_CHA, 0
00000Er 1  7F A9 00 8D  
000012r 1  41 7F        
000014r 1  A9 09 8D 40          aySetVolume AY_PSG0, AY_CHB, 0
000018r 1  7F A9 00 8D  
00001Cr 1  41 7F        
00001Er 1  A9 0A 8D 40          aySetVolume AY_PSG0, AY_CHC, 0
000022r 1  7F A9 00 8D  
000026r 1  41 7F        
000028r 1               
000028r 1  A9 00 8D 40          ayPlayNote AY_PSG0, AY_CHA, 0
00002Cr 1  7F A9 00 8D  
000030r 1  41 7F A9 01  
00003Cr 1  A9 02 8D 40          ayPlayNote AY_PSG0, AY_CHB, 0
000040r 1  7F A9 00 8D  
000044r 1  41 7F A9 03  
000050r 1  A9 04 8D 40          ayPlayNote AY_PSG0, AY_CHC, 0
000054r 1  7F A9 00 8D  
000058r 1  41 7F A9 05  
000064r 1               
000064r 1  A9 0B 8D 40          aySetEnvelopePeriod AY_PSG0, 0
000068r 1  7F A9 00 8D  
00006Cr 1  41 7F A9 0C  
000078r 1  A9 0D 8D 40          aySetEnvShape AY_PSG0, 0
00007Cr 1  7F A9 00 8D  
000080r 1  41 7F        
000082r 1  A9 0D 8D 40          aySetNoise  AY_PSG0, 0
000086r 1  7F A9 00 8D  
00008Ar 1  41 7F        
00008Cr 1               
00008Cr 1  A9 08 8D 44          aySetVolume AY_PSG1, AY_CHA, 0
000090r 1  7F A9 00 8D  
000094r 1  45 7F        
000096r 1  A9 09 8D 44          aySetVolume AY_PSG1, AY_CHB, 0
00009Ar 1  7F A9 00 8D  
00009Er 1  45 7F        
0000A0r 1  A9 0A 8D 44          aySetVolume AY_PSG1, AY_CHC, 0
0000A4r 1  7F A9 00 8D  
0000A8r 1  45 7F        
0000AAr 1               
0000AAr 1  A9 00 8D 44          ayPlayNote AY_PSG1, AY_CHA, 0
0000AEr 1  7F A9 00 8D  
0000B2r 1  45 7F A9 01  
0000BEr 1  A9 02 8D 44          ayPlayNote AY_PSG1, AY_CHB, 0
0000C2r 1  7F A9 00 8D  
0000C6r 1  45 7F A9 03  
0000D2r 1  A9 04 8D 44          ayPlayNote AY_PSG1, AY_CHC, 0
0000D6r 1  7F A9 00 8D  
0000DAr 1  45 7F A9 05  
0000E6r 1               
0000E6r 1  A9 0B 8D 44          aySetEnvelopePeriod AY_PSG1, 0
0000EAr 1  7F A9 00 8D  
0000EEr 1  45 7F A9 0C  
0000FAr 1  A9 0D 8D 44          aySetEnvShape AY_PSG1, 0
0000FEr 1  7F A9 00 8D  
000102r 1  45 7F        
000104r 1  A9 0D 8D 44          aySetNoise  AY_PSG1, 0
000108r 1  7F A9 00 8D  
00010Cr 1  45 7F        
00010Er 1  60                   rts
00010Fr 1               ; Note frequencies from https://pages.mtu.edu/~suits/notefreqs.html
00010Fr 1               
00010Fr 1               
